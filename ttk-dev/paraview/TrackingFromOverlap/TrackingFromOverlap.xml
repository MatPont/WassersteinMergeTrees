<?xml version="1.0" encoding="UTF-8"?>
<ServerManagerConfiguration>
    <ProxyGroup name="filters">
        <SourceProxy name="TrackingFromOverlap" class="ttkTrackingFromOverlap" label="TTK TrackingFromOverlap">
            <Documentation long_help="TTK TrackingFromOverlap" short_help="TTK TrackingFromOverlap">
This filter identifies and tracks labled vtkPointSets across time (and optionally levels) based on spatial overlap, where two points overlap iff their corresponding coordinates are equal. This filter can be executed iteratively and can generate nested tracking graphs.

Related publication:

'Nested Tracking Graphs'.
Jonas Lukasczyk, Gunther Weber, Ross Maciejewski, Christoph Garth, and Heike Leitte.
Computer Graphics Forum (Special Issue, Proceedings Eurographics / IEEE Symposium on Visualization). Vol. 36. No. 3. 2017.

Type:
* 0 - tracking graph,
* 1 - nesting tree
                </Documentation>

            <InputProperty name="Input" command="SetInputConnection">
                <ProxyGroupDomain name="groups">
                    <Group name="sources" />
                    <Group name="filters" />
                </ProxyGroupDomain>
                <InputArrayDomain name="input_array" attribute_type="point" />
                <Documentation>A vtkMultiBlockDataSet that represents a sequence of vtkPointSets. Optionally: a vtkMultiBlockDataSet that contains multiple sequences, where each sequence corresponds to a level.</Documentation>
            </InputProperty>

            <StringVectorProperty name="LabelFieldName" command="SetLabelFieldName" number_of_elements="1" animateable="0" label="Labels">
                <ArrayListDomain name="array_list" default_values="RegionId" input_domain_name="input_array">
                    <RequiredProperties>
                        <Property name="Input" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>Point data that associates a label with each point.</Documentation>
            </StringVectorProperty>

            <IntVectorProperty name="UseAllCores" label="Use All Cores" command="SetUseAllCores" number_of_elements="1" default_values="1" panel_visibility="advanced">
                <BooleanDomain name="bool" />
                <Documentation>Use all available cores.</Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="ThreadNumber" label="Thread Number" command="SetThreadNumber" number_of_elements="1" default_values="1" panel_visibility="advanced">
                <IntRangeDomain name="range" min="1" max="100" />
                <Documentation>Thread number.</Documentation>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="UseAllCores" value="0" />
                </Hints>
            </IntVectorProperty>
            <IntVectorProperty name="DebugLevel" label="Debug Level" command="SetDebugLevel" number_of_elements="1" default_values="3" panel_visibility="advanced">
                <IntRangeDomain name="range" min="0" max="100" />
                <Documentation>Debug level.</Documentation>
            </IntVectorProperty>

            <PropertyGroup panel_widget="Line" label="Input Options">
                <Property name="LabelFieldName" />
            </PropertyGroup>

            <PropertyGroup panel_widget="Line" label="Testing">
                <Property name="UseAllCores" />
                <Property name="ThreadNumber" />
                <Property name="DebugLevel" />
            </PropertyGroup>

            <Hints>
                <ShowInMenu category="TTK - Time-varying Scalar Data" />
            </Hints>
        </SourceProxy>
    </ProxyGroup>
</ServerManagerConfiguration>
